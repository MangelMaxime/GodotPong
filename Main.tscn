[gd_scene load_steps=14 format=2]

[ext_resource path="res://Ball.tscn" type="PackedScene" id=1]
[ext_resource path="res://assets/Separator.png" type="Texture" id=2]
[ext_resource path="res://logic/PlayerPaddle.gd" type="Script" id=3]
[ext_resource path="res://logic/BounceWall.gd" type="Script" id=4]
[ext_resource path="res://logic/AIPaddle.gd" type="Script" id=5]
[ext_resource path="res://logic/SideWall.gd" type="Script" id=6]
[ext_resource path="res://assets/Paddle.png" type="Texture" id=7]
[ext_resource path="res://Scoreboard.tscn" type="PackedScene" id=8]
[ext_resource path="res://UIScene.tscn" type="PackedScene" id=9]

[sub_resource type="RectangleShape2D" id=5]
extents = Vector2( 6, 31 )

[sub_resource type="RectangleShape2D" id=6]
extents = Vector2( 512, 8 )

[sub_resource type="RectangleShape2D" id=7]
extents = Vector2( 10, 300 )

[sub_resource type="Animation" id=4]
resource_name = "Win animation"
tracks/0/type = "value"
tracks/0/path = NodePath("UI:rect_scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector2( 1e-05, 1e-05 ), Vector2( 1, 1 ) ]
}

[node name="Pong" type="Node2D"]

[node name="Camera2D" type="Camera2D" parent="."]
anchor_mode = 0

[node name="Background" type="ColorRect" parent="."]
margin_right = 1024.0
margin_bottom = 600.0
color = Color( 0, 0, 0, 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Ball" parent="." instance=ExtResource( 1 )]
position = Vector2( 512, 300 )
SPEED = 500

[node name="LeftPaddle" type="Area2D" parent="."]
position = Vector2( 60, 300 )
script = ExtResource( 5 )
MOVE_SPEED = 175

[node name="CollisionShape2D" type="CollisionShape2D" parent="LeftPaddle"]
shape = SubResource( 5 )
__meta__ = {
"_edit_lock_": true
}

[node name="Sprite" type="Sprite" parent="LeftPaddle"]
texture = ExtResource( 7 )

[node name="RightPaddle" type="Area2D" parent="."]
position = Vector2( 964, 300 )
script = ExtResource( 3 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="RightPaddle"]
shape = SubResource( 5 )
__meta__ = {
"_edit_lock_": true
}

[node name="Sprite" type="Sprite" parent="RightPaddle"]
texture = ExtResource( 7 )

[node name="Floor" type="Area2D" parent="."]
script = ExtResource( 4 )
bounce_direction = -1

[node name="CollisionShape2D" type="CollisionShape2D" parent="Floor"]
position = Vector2( 512, 608 )
shape = SubResource( 6 )

[node name="Ceiling" type="Area2D" parent="."]
script = ExtResource( 4 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="Ceiling"]
position = Vector2( 512, -8 )
shape = SubResource( 6 )

[node name="LeftWall" type="Area2D" parent="."]
position = Vector2( -10, 300 )
script = ExtResource( 6 )
scoreReference = "Right"

[node name="CollisionShape2D" type="CollisionShape2D" parent="LeftWall"]
shape = SubResource( 7 )

[node name="RightWall" type="Area2D" parent="."]
position = Vector2( 1034, 300 )
script = ExtResource( 6 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="RightWall"]
shape = SubResource( 7 )

[node name="Separator" type="Sprite" parent="."]
position = Vector2( 512, 300 )
texture = ExtResource( 2 )
region_enabled = true
region_rect = Rect2( 0, 0, 6, 600 )

[node name="LeftScoreboard" parent="." instance=ExtResource( 8 )]
winner_text = NodePath("../UI/WinText")
win_text = "Computer win"

[node name="RightScoreboard" parent="." instance=ExtResource( 8 )]
offset = Vector2( 512, 0 )
winner_text = NodePath("../UI/WinText")
win_text = "Player win"

[node name="WinTitle" type="AnimationPlayer" parent="."]
"anims/Win animation" = SubResource( 4 )

[node name="UI" parent="." instance=ExtResource( 9 )]
[connection signal="area_entered" from="LeftPaddle" to="LeftPaddle" method="_on_area_entered"]
[connection signal="area_entered" from="RightPaddle" to="RightPaddle" method="_on_area_entered"]
[connection signal="area_entered" from="Floor" to="Floor" method="_on_area_entered"]
[connection signal="area_entered" from="Ceiling" to="Ceiling" method="_on_area_entered"]
[connection signal="area_entered" from="LeftWall" to="LeftWall" method="_on_area_entered"]
[connection signal="area_entered" from="RightWall" to="RightWall" method="_on_area_entered"]
